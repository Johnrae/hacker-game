{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","js/badguy.js","js/goodguy.js","js/tests.js"],"names":[],"mappings":"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","file":"tests.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let Badguy = function (obj){\n\n  obj = obj || {};\n\n  this.health = 300;\n\n  this.hit = function(num){\n    let hitpoints = num || 5;\n    return this.health = this.health - hitpoints;\n  }\n};\n\nexport default Badguy;","let Goodguy = function (obj){\n\n  obj = obj || {};\n\n  this.health = 300;\n\n  this.hit = function(num){\n\n    let hitPoints = num || 5;\n    return this.health = this.health - hitPoints;\n\n  };\n};\n\nexport default Goodguy;","import GoodGuy from './goodguy';\nimport BadGuy from './badguy'\n\n(function() {\n  'use strict';\n\n  describe('About My Good Guy', function() {\n\n    beforeEach( function() {\n      window.x = new GoodGuy();\n    });\n\n    describe('creating a good guy', function() {\n      it('should create an instance of Good Guy', function () {\n        expect(x instanceof GoodGuy).to.equal(true);\n      });\n    });\n\n    describe('my player health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(300);\n      });\n    });\n\n    describe('player taking damage', function() {\n      it('should lower the score, after getting hit', function() {\n        x.hit();\n        expect(x.health).to.be.below(300);\n      })\n\n    });\n\n  });\n\n describe('About My Bad Guy', function() {\n\n    beforeEach( function() {\n      window.x = new BadGuy();\n    });\n\n    describe('creating a buy guy', function() {\n      it('should create an instance of Good Guy', function () {\n        expect(x instanceof BadGuy).to.equal(true);\n      });\n    });\n\n    describe('bad guy health', function() {\n      it('should have full health upon creation', function() {\n        expect(x.health).to.equal(300);\n      });\n    });\n\n    describe('bad guy taking damage', function() {\n      it('should lower the score, after getting hit', function() {\n        x.hit();\n        expect(x.health).to.be.below(300);\n      })\n      \n    });\n\n    \n\n  }); \n\n}());\n\n//good guy\n\n//bad guy\n\n//both have attack methods\n\n//both will have health"]}